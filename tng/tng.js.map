{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/globals.ts","src/animation.ts","src/application.ts","src/bootstrap.ts","src/component-view.ts","src/component.ts","src/constant.ts","src/controller.ts","src/decorator.ts","src/directive.ts","src/di.ts","src/filter.ts","src/module.ts","src/reflection.ts","src/service.ts","src/ui-router/routes.ts","src/ui-router/states.ts","src/ui-router.ts","src/utils.ts","src/value.ts","src/view.ts","src/main.ts"],"names":[],"mappings":"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","file":"tng.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInNyYy9nbG9iYWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIiXX0=","/// <reference path=\"./_references\" />\r\n\r\nimport {getAnnotations} from './reflection';\r\nimport {bind} from './di';\r\nimport {makeDecorator, FunctionReturningSomething, setIfInterface} from './utils';\r\nimport {merge, create, isFunction, bindAll} from './utils';\r\n\r\n/**\r\n * Options available when decorating a class as an animation controller\r\n * TODO document\r\n */\r\nexport interface AnimationOptions {\r\n    \r\n    /**\r\n     * TODO rules?\r\n     */\r\n    name: string;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class AnimationAnnotation {\r\n\r\n    name: string = '';\r\n\r\n    constructor(options: AnimationOptions) {\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\ntype endFunction = (isCancelled: boolean) => void;\r\n\r\n/**\r\n * Interface animation controllers MAY implement\r\n * TODO document\r\n */\r\nexport interface Animation {\r\n    enter?: (element: ng.IAugmentedJQuery, done: Function) => endFunction;\r\n    leave?: (element: ng.IAugmentedJQuery, done: Function) => endFunction;\r\n    move?: (element: ng.IAugmentedJQuery, done: Function) => endFunction;\r\n    addClass?: (element: ng.IAugmentedJQuery, className: string, done: Function) => endFunction;\r\n    removeClass?: (element: ng.IAugmentedJQuery, className: string, done: Function) => endFunction;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface AnimationConstructor extends Function {\r\n    new (...args: any[]): Animation;\r\n    prototype: Animation;\r\n}\r\n\r\ntype DecoratorSignature = (options: AnimationOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being an animation controller\r\n */\r\nexport var Animation = <DecoratorSignature> makeDecorator(AnimationAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function registerAnimation(animationClass: AnimationConstructor, ngModule: ng.IModule) {\r\n\r\n    var aux = getAnnotations(animationClass, AnimationAnnotation);\r\n\r\n    if (!aux.length) {\r\n        throw new Error(\"Filter annotation not found\");\r\n    }\r\n\r\n    var {name} = merge(create(AnimationAnnotation), ...aux);\r\n\r\n    // TODO validate implementation?\r\n\r\n    ngModule.animation(name, bind(['$injector'], function($injector: ng.auto.IInjectorService) {\r\n        var singleton = <Animation> $injector.instantiate(animationClass);\r\n        bindAll(singleton);        \r\n        return singleton;\r\n    }));\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\nimport {makeDecorator, setIfInterface} from './utils';\r\nimport {ModuleOptions, ModuleAnnotation, Module, ModuleConstructor} from './module';\r\n\r\n/**\r\n * Options available when decorating a class as an application\r\n * TODO document\r\n */\r\nexport interface ApplicationOptions extends ModuleOptions {\r\n\tselector: string;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ApplicationAnnotation extends ModuleAnnotation {\r\n\r\n\tselector: string = '';\r\n\r\n\tconstructor(options: ApplicationOptions) {\r\n\t\tsuper(options);\r\n\t\tsetIfInterface(this, options);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Interface applications MAY implement\r\n */\r\nexport interface Application extends Module {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ApplicationConstructor extends ModuleConstructor {\r\n\r\n}\r\n\r\ntype ApplicationSignature = (options: ApplicationOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being an application\r\n */\r\nexport var Application = <ApplicationSignature> makeDecorator(ApplicationAnnotation);","/// <reference path=\"./_references\" />\r\n\r\n/*\r\nApplications must have:\r\n    - Module annotation\r\n\r\nSteps to bootstrap:\r\n\r\n    - Process submodules (recursively)\r\n    - Process the application module\r\n    - Bootstrap\r\n    \r\nTo process a module is to:\r\n    - Iterate through it's submodules and process them (recurse)\r\n        - Register the module on Angular            \r\n        - Register services on Angular\r\n        - Register directives on Angular\r\n        - Register components on Angular\r\n            - Gather route annotations\r\n        - Register config and run functions\r\n*/\r\n\r\nimport {getAnnotations} from './reflection';\r\nimport {merge, create} from './utils';\r\nimport {ApplicationConstructor, ApplicationAnnotation} from './application';\r\nimport {ModuleConstructor, ModuleAnnotation, registerModule} from './module';\r\n\r\n/**\r\n * \r\n */\r\nexport function bootstrap(moduleClass: ApplicationConstructor): ng.auto.IInjectorService;\r\nexport function bootstrap(moduleClass: ModuleConstructor, element: Element): ng.auto.IInjectorService;\r\nexport function bootstrap(moduleClass: ModuleConstructor, selector: string): ng.auto.IInjectorService;\r\nexport function bootstrap(moduleClass: ModuleConstructor, selectorOrElement?: any): ng.auto.IInjectorService {\r\n\r\n    var aux: ModuleAnnotation[];\r\n    var appNotes: ApplicationAnnotation;\r\n\r\n    aux = getAnnotations(moduleClass, ModuleAnnotation);\r\n    if (!aux.length) {\r\n        throw new Error('No module annotation found');\r\n    }\r\n    appNotes = merge(create(ApplicationAnnotation), ...aux);\r\n\r\n    selectorOrElement = selectorOrElement || appNotes.selector;\r\n    if (!selectorOrElement) {\r\n        throw new Error('No selector specified');\r\n    }\r\n\r\n    var ngModule = registerModule(moduleClass);\r\n\r\n    return angular.bootstrap(selectorOrElement, [ngModule.name]);\r\n\r\n}\r\n\r\n//export function bootstrapWhenReady(moduleClass: ModuleConstructor): Promise<ng.auto.IInjectorService>;\r\n//export function bootstrapWhenReady(moduleClass: ModuleConstructor, element: Element): Promise<ng.auto.IInjectorService>;\r\n//export function bootstrapWhenReady(moduleClass: ModuleConstructor, selector: string): Promise<ng.auto.IInjectorService>;\r\n//export function bootstrapWhenReady(moduleClass: ModuleConstructor, selectorOrElement?: any): Promise<ng.auto.IInjectorService> {\r\n//    \r\n//    var promise = new Promise<ng.auto.IInjectorService>((resolve, reject) => {\r\n//        // TODO\r\n//    });\r\n//    \r\n//    return promise;\r\n//    \r\n//}","/// <reference path=\"./_references\" />\r\n\r\nimport {makeDecorator, setIfInterface} from './utils';\r\nimport {ViewOptions, ViewAnnotation} from './view';\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport const enum ComponentTemplateNamespace {\r\n    HTML,\r\n    SVG,\r\n    MathML\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const NAMESPACE_MAP = ['html', 'svg', 'math'];\r\n\r\n/**\r\n * Options available when decorating a component with view information\r\n * TODO document\r\n */\r\nexport interface ComponentViewOptions extends ViewOptions {\r\n    \r\n    /**\r\n     * \r\n     */\r\n    namespace?: ComponentTemplateNamespace;\r\n    \r\n    /**\r\n     * @deprecated\r\n     */\r\n    replace?: boolean;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ComponentViewAnnotation extends ViewAnnotation {\r\n\r\n    namespace = ComponentTemplateNamespace.HTML;\r\n    replace = false;\r\n\r\n    constructor(options: ComponentViewOptions) {\r\n        super(options);\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\ntype ComponentViewDecorator = (options: ComponentViewOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a component with view information\r\n */\r\nexport var ComponentView = <ComponentViewDecorator> makeDecorator(ComponentViewAnnotation);","/// <reference path=\"./_references\" />\r\n\r\nimport {Inject, bind, hasInjectAnnotation} from './di';\r\nimport {makeDecorator, Map, setIfInterface, merge, create, isFunction} from './utils';\r\nimport {FunctionReturningString, FunctionReturningNothing, parseSelector, SelectorType} from './utils';\r\nimport {getAnnotations} from './reflection';\r\nimport {ViewAnnotation} from './view';\r\nimport {ComponentViewAnnotation, NAMESPACE_MAP} from './component-view';\r\nimport {CommonDirectiveOptions, CommonDirectiveAnnotation} from './directive'\r\nimport {Directive, DirectiveAnnotation, DirectiveConstructor, Transclusion} from './directive'\r\nimport {makeDirectiveDO, DirectiveDefinitionObject, inFactory as inFactoryDirective} from './directive'\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport interface ComponentOptions extends CommonDirectiveOptions {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ComponentAnnotation extends CommonDirectiveAnnotation {\r\n\r\n    /*constructor(options: ComponentOptions) {\r\n        super(<any> options); // TODO WTF needs casting?\r\n        //setIfInterface(this, options); nothing to do so far\r\n    }*/\r\n\r\n}\r\n\r\n/**\r\n * Interface components MAY implement\r\n */\r\nexport interface Component extends Directive {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ComponentConstructor extends DirectiveConstructor {\r\n    new (): Component;\r\n}\r\n\r\ntype ComponentDecorator = (options: ComponentOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a component controller\r\n */\r\nexport var Component = <ComponentDecorator> makeDecorator(ComponentAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ComponentDefinitionObject extends DirectiveDefinitionObject {\r\n    controllerAs?: string;\r\n    template?: string|FunctionReturningString;\r\n    templateUrl?: string|FunctionReturningString;\r\n    templateNamespace?: string;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function registerComponent(componentClass: ComponentConstructor, ngModule: ng.IModule) {\r\n\r\n    var aux = getAnnotations(componentClass, ComponentAnnotation);\r\n\r\n    if (!aux.length) {\r\n        throw new Error(\"Component annotation not found\");\r\n    }\r\n\r\n    var {name, factory} = makeComponentFactory(componentClass);\r\n    ngModule.directive(name, factory);\r\n    \r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function makeComponentDO(componentClass: ComponentConstructor): ComponentDefinitionObject {\r\n\r\n    var cdo = <ComponentDefinitionObject> makeDirectiveDO(<DirectiveConstructor> componentClass);\r\n\r\n    // var component = merge(create(ComponentAnnotation), ...getAnnotations(componentClass, ComponentAnnotation));\r\n    var template = merge(create(ComponentViewAnnotation), ...getAnnotations(componentClass, ComponentViewAnnotation));\r\n    \r\n    // TODO Component restrictions\r\n        \r\n    if (template.controllerAs) cdo.controllerAs = template.controllerAs;\r\n    if (template.namespace) cdo.templateNamespace = NAMESPACE_MAP[template.namespace];\r\n    // TODO styleUrl\r\n    \r\n    if (template.template) cdo.template = template.template;\r\n    else if (template.templateUrl) cdo.templateUrl = template.templateUrl;\r\n    else throw new Error('Components must have an inline or remote template');    \r\n        \r\n    return cdo;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function inFactory(cdo: ComponentDefinitionObject, $injector: ng.auto.IInjectorService): ComponentDefinitionObject {\r\n\r\n    if (isFunction(cdo.template)) {\r\n        cdo.template = !hasInjectAnnotation(cdo.template) ? cdo.template : (tElement: any, tAttrs: any) => {\r\n            return $injector.invoke(<any> cdo.template, null, {\r\n                element: tElement,\r\n                attributes: tAttrs\r\n            });\r\n        };\r\n    }\r\n\r\n    if (isFunction(cdo.templateUrl)) {\r\n        cdo.templateUrl = !hasInjectAnnotation(cdo.templateUrl) ? cdo.templateUrl : (tElement: any, tAttrs: any) => {\r\n            return $injector.invoke(<any> cdo.templateUrl, null, {\r\n                element: tElement,\r\n                attributes: tAttrs\r\n            });\r\n        };\r\n    }\r\n    \r\n    // TODO styleUrl\r\n    \r\n    return cdo;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function makeComponentFactory(componentClass: ComponentConstructor) {\r\n\r\n    var cdo = makeComponentDO(componentClass);\r\n\r\n    var factory = bind(['$injector'], function directiveFactory($injector: ng.auto.IInjectorService): ng.IDirective {\r\n        return <any> inFactory(inFactoryDirective(cdo, $injector), $injector);\r\n    });\r\n\r\n    return {\r\n        name: cdo.imperativeName,\r\n        factory: factory\r\n    };\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\nimport {setIfInterface} from './utils';\r\nimport {setAnnotations, getAnnotations} from './reflection';\r\n\r\n/**\r\n * A framework envelope for the constant\r\n */\r\nexport interface ConstantWrapper {\r\n\r\n}\r\n\r\n/**\r\n * Wraps a constant to be made available for dependency injection\r\n * \r\n * @param name The name of the constant through which it will made available\r\n * @param constant The constant to be injected, as is\r\n * \r\n * @return A wrapper, to be used as a module dependency\r\n */\r\nexport function Constant(name: string, constant: any): ConstantWrapper {\r\n\r\n    var wrapper: ConstantWrapper = {};\r\n\r\n    setAnnotations(wrapper, [new ConstantAnnotation<any>({\r\n        name: name,\r\n        constant: constant\r\n    })], 'value');\r\n\r\n    return wrapper;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ConstantOptions {\r\n    name: string;\r\n    constant: any;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ConstantAnnotation<Type> {\r\n\r\n    name = '';\r\n    constant: Type = null;\r\n\r\n    constructor(options: ConstantOptions) {\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function registerConstant(constant: ConstantWrapper, ngModule: ng.IModule) {\r\n\r\n    var aux = getAnnotations(constant, ConstantAnnotation, 'value');\r\n\r\n    if (!aux.length) {\r\n        throw new Error(\"Constant annotation not found\");\r\n    }\r\n\r\n    var annotation = <ConstantAnnotation<any>> aux[0];\r\n    ngModule.constant(annotation.name, annotation.constant);\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\n// import {makeDecorator} from './utils';\r\n\r\n// export interface ControllerOptions {\r\n    \r\n// }\r\n\r\n// export class ControllerAnnotation {\r\n    \r\n//     constructor(options:ControllerOptions) {\r\n        \r\n//     }\r\n    \r\n// }\r\n\r\n// type ControllerAnnotationDecorator = (options:ControllerOptions) => ClassDecorator;\r\n// export var Controller = <ControllerAnnotationDecorator> makeDecorator(ControllerAnnotation);\r\n","/// <reference path=\"./_references\" />\r\n\r\nimport {bind} from './di';\r\nimport {getAnnotations} from './reflection';\r\nimport {makeDecorator, setIfInterface, merge, create, isFunction} from './utils';\r\n\r\n/**\r\n * Options available when decorating a class as a service decorator\r\n */\r\nexport interface DecoratorOptions {\r\n\r\n    /**\r\n     * The name of service to decorate\r\n     */\r\n    name: string;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class DecoratorAnnotation {\r\n\r\n    name: string = '';\r\n\r\n    constructor(options: DecoratorOptions) {\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Interface service decorators MUST implement\r\n * \r\n * * It's a singleton, instantiated the first the decorated service is needed\r\n * * The constructor can receive dependency injections\r\n * * The original service instance is available for injection locally as $delegate \r\n * * When asked for, what is provided is actually the method decorate() bound the decorator instance\r\n */\r\nexport interface Decorator {\r\n   \r\n    /**\r\n     * The method that does the actual decoration\r\n     * \r\n     * This method must return the decorated service, as it will be used when\r\n     * the service is asked for.\r\n     * \r\n     * * Can receive dependency injections\r\n     * * The original service instance is available for injection locally as $delegate\r\n     */\r\n    decorate(...args: any[]): any;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface DecoratorConstructor extends Function {\r\n    new (...args: any[]): Decorator;\r\n    prototype: Decorator;\r\n}\r\n\r\ntype DecoratorSignature = (options: DecoratorOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a service decorator\r\n */\r\nexport var Decorator = <DecoratorSignature> makeDecorator(DecoratorAnnotation);\r\n\r\n/**\r\n * @inernal\r\n */\r\nexport function registerDecorator(decoratorClass: DecoratorConstructor, ngModule: ng.IModule) {\r\n\r\n    var aux = getAnnotations(decoratorClass, DecoratorAnnotation);\r\n\r\n    if (!aux.length) {\r\n        throw new Error(\"Decorator annotation not found\");\r\n    }\r\n\r\n    var {name} = merge(create(DecoratorAnnotation), ...aux);\r\n\r\n    if (!isFunction(decoratorClass.prototype.decorate)) {\r\n        throw new Error(`Decorator \"${name}\" does not implement a decorate method`);\r\n    }\r\n\r\n    ngModule.config(bind(['$provide'], function($provide: ng.auto.IProvideService) {\r\n        $provide.decorator(name, bind(['$delegate', '$injector'], function($delegate: any, $injector: ng.auto.IInjectorService) {\r\n\r\n            var instance = <Decorator> $injector.instantiate(decoratorClass, {\r\n                $delegate: $delegate\r\n            });\r\n\r\n            return $injector.invoke(instance.decorate, instance, {\r\n                $delegate: $delegate\r\n            });\r\n\r\n        }));\r\n    }));\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\nimport {Inject, bind, hasInjectAnnotation} from './di';\r\nimport {makeDecorator, Map, setIfInterface, merge, create, isFunction} from './utils';\r\nimport {FunctionReturningString, FunctionReturningNothing, parseSelector, SelectorType} from './utils';\r\nimport {getAnnotations} from './reflection';\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport const enum Transclusion {\r\n    Content,\r\n    Element\r\n}\r\nconst TRANSCLUSION_MAP = [true, 'element'];\r\n\r\ntype PrePost = {\r\n    pre: FunctionReturningNothing,\r\n    post: FunctionReturningNothing\r\n};\r\ntype CompileFunction = (...args: any[]) => FunctionReturningNothing;\r\ntype FunctionReturningPrePost = (...args: any[]) => PrePost;\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport interface CommonDirectiveOptions {\r\n\r\n    // name = element\r\n    // .name = class\r\n    // [name] = attribute\r\n    // //name = comment (unavailable)\r\n    selector: string;\r\n    \r\n    // infered from the selector\r\n    //restrict?: Restriction|Restriction[]; // [Restriction.Element, Restriction.Element]\r\n    \r\n    // TODO Como simplificar\r\n    // TODO depende de controllerAs?\r\n    // TODO como realmente funciona bindToController no 1.4? Nas docs,\r\n    //      ainda esta como boolean apenas, mas parece que pode ser um Map\r\n    scope?: boolean|Map<string>;\r\n    bind?: boolean|Map<string>;\r\n\r\n    require?: string[];\r\n    \r\n    // needs mapping\r\n    transclude?: Transclusion; // Transclusion.Content\r\n        \r\n    compile?: CompileFunction|FunctionReturningPrePost;\r\n    link?: FunctionReturningNothing|PrePost;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class CommonDirectiveAnnotation {\r\n\r\n    selector = '';\r\n    scope: boolean|Map<string> = false;\r\n    bind: boolean|Map<string> = false;\r\n    require: string[] = null;\r\n    transclude = Transclusion.Content;\r\n    compile: CompileFunction|FunctionReturningPrePost = null;\r\n    link: FunctionReturningNothing|PrePost = null;\r\n\r\n    constructor(options: CommonDirectiveAnnotation) {\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport interface DirectiveOptions extends CommonDirectiveOptions {\r\n\r\n    priority?: number;\r\n    terminal?: boolean;\r\n    multiElement?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class DirectiveAnnotation extends CommonDirectiveAnnotation {\r\n\r\n    multiElement = false;\r\n    priority = 0;\r\n    terminal = false;\r\n\r\n    constructor(options: DirectiveOptions) {\r\n        super(<any> options); // TODO WTF needs casting?\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * TODO document\r\n */\r\nexport interface Directive {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface DirectiveConstructor extends Function {\r\n    new (): Directive;\r\n}\r\n\r\ntype DirectiveDecorator = (options: DirectiveOptions) => ClassDecorator;\r\n\r\n/**\r\n * \r\n */\r\nexport var Directive = <DirectiveDecorator> makeDecorator(DirectiveAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\n//export interface DirectiveDefinitionObject extends ng.IDirective { // bindToController incompatible with angular.d.ts\r\nexport interface DirectiveDefinitionObject {\r\n    multiElement?: boolean;\r\n    compile?: CompileFunction|FunctionReturningPrePost;\r\n    controller?: any;\r\n    bindToController?: boolean|Map<string>;\r\n    link?: FunctionReturningNothing|PrePost;\r\n    name?: string;\r\n    priority?: number;\r\n    require?: string[];\r\n    restrict?: string;\r\n    scope?: boolean|Map<string>;\r\n    terminal?: boolean;\r\n    transclude?: boolean|string;\r\n\r\n    semanticName: string;\r\n    imperativeName: string;\r\n}\r\n\r\nconst RESTRICTION_MAP: Map<string> = {\r\n    [SelectorType.Attribute]: 'A',\r\n    [SelectorType.Tag]: 'E',\r\n    [SelectorType.Class]: 'C'\r\n    //[SelectorType.Comment]: 'M'\r\n};\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function makeDirectiveDO(directiveClass: DirectiveConstructor): DirectiveDefinitionObject {\r\n\r\n    var directive = merge(create(DirectiveAnnotation), ...getAnnotations(directiveClass, DirectiveAnnotation));\r\n\r\n    var selectorData = parseSelector(directive.selector);\r\n    var ddo: DirectiveDefinitionObject = {\r\n        semanticName: selectorData.semanticeName,\r\n        imperativeName: selectorData.imperativeName,\r\n        restrict: RESTRICTION_MAP[selectorData.type],\r\n        controller: directiveClass,\r\n        multiElement: directive.multiElement,\r\n        priority: directive.priority,\r\n        terminal: directive.terminal,\r\n    };\r\n\r\n    if (directive.scope) ddo.scope = directive.scope;\r\n    if (directive.bind) ddo.bindToController = directive.bind;\r\n    if (directive.transclude) ddo.transclude = TRANSCLUSION_MAP[directive.transclude];\r\n    if (directive.compile) ddo.compile = directive.compile;\r\n    if (directive.link) ddo.link = directive.link;\r\n\r\n    return ddo;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function inFactory(ddo: DirectiveDefinitionObject, $injector: ng.auto.IInjectorService): DirectiveDefinitionObject {\r\n\r\n    if (isFunction(ddo.compile)) {\r\n        ddo.compile = !hasInjectAnnotation(ddo.compile) ? ddo.compile :\r\n            (tElement: any, tAttrs: any, transclude: any) => {\r\n                return $injector.invoke(ddo.compile, null, {\r\n                    element: tElement,\r\n                    attributes: tAttrs,\r\n                    transclude: transclude\r\n                });\r\n            }\r\n    }\r\n\r\n    if (isFunction(ddo.link)) {\r\n        ddo.link = !hasInjectAnnotation(ddo.link) ? ddo.link :\r\n            (scope: any, iElement: any, iAttrs: any, controllers: any, transclude: any) => {\r\n                return $injector.invoke(<any> ddo.link, null, {\r\n                    scope: scope,\r\n                    element: iElement,\r\n                    attributes: iAttrs,\r\n                    controller: controllers,\r\n                    transclude: transclude\r\n                });\r\n            }\r\n    }\r\n\r\n    return ddo;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function makeDirectiveFactory(directiveClass: DirectiveConstructor) {\r\n\r\n    var ddo = makeDirectiveDO(directiveClass);\r\n\r\n    var factory = bind(['$injector'], function directiveFactory($injector: ng.auto.IInjectorService): ng.IDirective {\r\n        return <any> inFactory(ddo, $injector);\r\n    });\r\n\r\n    return {\r\n        name: ddo.imperativeName,\r\n        factory: factory\r\n    };\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function registerDirective(directiveClass: DirectiveConstructor, ngModule: ng.IModule) {\r\n\r\n    var aux = getAnnotations(directiveClass, DirectiveAnnotation);\r\n\r\n    if (!aux.length) {\r\n        throw new Error(\"Directive annotation not found\");\r\n    }\r\n\r\n    var {name, factory} = makeDirectiveFactory(directiveClass);\r\n    ngModule.directive(name, factory);\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\n/**\r\n * Annotates a function with information of dependencies to be injected as parameters\r\n * \r\n * * Overrides previous annotation (logs warning)\r\n * * All parameters should be annotated (logs warning)\r\n * * Dependencies will be injected in the order they are specified in the dependencies parameter\r\n * \r\n * @param dependencies Names of the dependencies to be injected, in order\r\n * @returns The provided function\r\n */\r\nexport function bind<T extends Function>(dependencies: string[], func: T): T {\r\n\t\r\n\t// TODO warn about overriding annotation\r\n\t// TODO warn about mismatching number of parameters and dependencies\r\n\r\n    func.$inject = dependencies.slice();\r\n\treturn func;\r\n\r\n}\r\n\r\n/**\r\n * A decorator to annotate method parameterss with dependencies to be injected\r\n *\r\n * * Overrides previous annotation (logs warning)\r\n * * All parameters should be annotated (logs warning)\r\n * \r\n * @param dependency The name of the dependency to be injected\r\n */\r\nexport function Inject(dependency: string): ParameterDecorator {\r\n\r\n\treturn (target: Function, propertyKey: string|symbol, parameterIndex: number) => {\r\n\t\t\r\n\t\t// TODO warn about overriding annotation\r\n\t\t// TODO warn about mismatching number of parameters and dependencies\r\n        \r\n        // If propertyKey is defined, we're decorating a parameter of a method\r\n        // If not, we're decorating a parameter of class constructor\r\n\t\ttarget = (typeof propertyKey == 'undefined') ? target : target = (<any>target)[propertyKey];\r\n\t\t\r\n\t\t// TODO what about missing elements in the $inject arrey?\r\n\t\t// ie. annotated the 2nd but not the 1st parameter\r\n\r\n\t\tvar $inject: string[] = (target.$inject = target.$inject || []);\r\n\t\t$inject[parameterIndex] = dependency;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Inspects an object for dependency injection annotation\r\n * \r\n * @internal\r\n * \r\n * @param target The object to be inspected\r\n */\r\nexport function hasInjectAnnotation(target: any): boolean {\r\n    \r\n\treturn !target ? false : target.hasOwnProperty('$inject');\r\n\t\r\n}","/// <reference path=\"./_references\" />\r\n\r\nimport {getAnnotations} from './reflection';\r\nimport {makeDecorator, setIfInterface, merge, create, isFunction} from './utils';\r\nimport {bind} from './di';\r\n\r\n/**\r\n * Options available when decorating a class as a filter\r\n */\r\nexport interface FilterOptions {\r\n    \r\n    /**\r\n     * The name with which the filter will be invoked in templates\r\n     * \r\n     * Must be valid angular Expressions identifiers, such as \"uppercase\",\r\n     * \"upperCase\" or \"upper_case\". Special charaters such as hyphens and dots\r\n     * are not allowed.\r\n     * \r\n     * To get a hold of the filter delegate through dependency injection,\r\n     * ask the injector for this name plus the suffix \"Filter\". \r\n     */\r\n    name: string;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class FilterAnnotation {\r\n\r\n    name: string = '';\r\n\r\n    constructor(options: FilterOptions) {\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Interface filter classes MUST implement\r\n * \r\n * * It's a singleton, instantiated the first time it is needed\r\n * * The constructor can receive dependency injections\r\n * * When asked for, what is provided is actually the method filter() bound the it's instance\r\n */\r\nexport interface Filter {\r\n    \r\n    /**\r\n     * The method that does the actual filtering\r\n     * \r\n     * When asked for, what is provided is actually this method\r\n     * bound the it's instance\r\n     * \r\n     * * Cannot receive dependency injections (use the constructor)\r\n     */\r\n    filter(input: any, ...rest: any[]): any;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface FilterConstructor extends Function {\r\n    new (...args: any[]): Filter;\r\n    prototype: Filter;\r\n}\r\n\r\ntype DecoratorSignature = (options: FilterOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a filter\r\n */\r\nexport var Filter = <DecoratorSignature> makeDecorator(FilterAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function registerFilter(filterClass: FilterConstructor, ngModule: ng.IModule) {\r\n\r\n    var aux = getAnnotations(filterClass, FilterAnnotation);\r\n\r\n    if (!aux.length) {\r\n        throw new Error(\"Filter annotation not found\");\r\n    }\r\n\r\n    var {name} = merge(create(FilterAnnotation), ...aux);\r\n\r\n    if (!isFunction(filterClass.prototype.filter)) {\r\n        throw new Error(`Filter \"${name}\" does not implement a filter method`);\r\n    }\r\n\r\n    ngModule.filter(name, bind(['$injector'], function($injector: ng.auto.IInjectorService) {\r\n        var filterSingleton = <Filter> $injector.instantiate(filterClass);\r\n        return filterSingleton.filter.bind(filterSingleton);\r\n    }));\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\nimport {getAnnotations, hasAnnotation, Reflect} from './reflection';\r\nimport {makeDecorator, setIfInterface, FunctionReturningNothing} from './utils';\r\nimport {merge, create, isString, isFunction} from './utils';\r\nimport {ValueAnnotation, registerValue} from './value';\r\nimport {ConstantAnnotation, registerConstant} from './constant';\r\nimport {FilterAnnotation, registerFilter} from './filter';\r\nimport {AnimationAnnotation, registerAnimation} from './animation';\r\nimport {ServiceAnnotation, registerService} from './service';\r\nimport {DecoratorAnnotation, registerDecorator} from './decorator';\r\nimport {DirectiveAnnotation, registerDirective} from './directive';\r\nimport {ComponentAnnotation, registerComponent} from './component';\r\nimport {registerStates} from './ui-router/states';\r\nimport {registerRoutes} from './ui-router/routes';\r\n\r\nconst PUBLISHED_ANNOTATION_KEY = 'tng:module-published-as';\r\n\r\n/**\r\n * Options available when decorating a class as a module\r\n * TODO document\r\n */\r\nexport interface ModuleOptions {\r\n\tdependencies?: (string|Function)[];\r\n\tconfig?: Function|Function[];\r\n\trun?: Function|Function[];\r\n\r\n\tname?: string;\r\n\tmodules?: (string|Function)[];\r\n\tcomponents?: Function[];\r\n\tservices?: Function[];\r\n\tfilters?: Function[];\r\n\tdecorators?: Function[];\r\n\tanimations?: Function[];\r\n\tvalues?: Function[];\r\n\tconstants?: Function[];\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ModuleAnnotation {\r\n\r\n\tdependencies: (string|Function)[] = null;\r\n\tconfig: Function|Function[] = null;\r\n\trun: Function|Function[] = null;\r\n\r\n\tname: string = '';\r\n\tmodules: (string|Function)[] = null;\r\n\tcomponents: Function[] = null;\r\n\tservices: Function[] = null;\r\n\tfilters: Function[] = null;\r\n\tdecorators: Function[] = null;\r\n\tanimations: Function[] = null;\r\n\tvalues: Function[] = null;\r\n\tconstants: Function[] = null;\r\n\r\n\tconstructor(options: ModuleOptions) {\r\n\t\tsetIfInterface(this, options);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Interface modules MAY implement\r\n * TODO document\r\n */\r\nexport interface Module {\r\n\tonConfig?: FunctionReturningNothing;\r\n\tonRun?: FunctionReturningNothing;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ModuleConstructor extends Function {\r\n\tnew (): Module;\r\n\tnew (ngModule: ng.IModule): Module;\r\n}\r\n\r\ntype ModuleSignature = (options: ModuleOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a module\r\n */\r\nexport var Module = <ModuleSignature> makeDecorator(ModuleAnnotation);\r\n\r\nvar moduleCount = 0;\r\n\r\nfunction getNewModuleName() {\r\n    \r\n    return `tng_generated_module#${++moduleCount}`;\r\n    \r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function registerModule(moduleClass: ModuleConstructor, name?: string): ng.IModule {\r\n\r\n    var aux: any[];\r\n    var moduleNotes: ModuleAnnotation;\r\n\r\n    aux = getAnnotations(moduleClass, ModuleAnnotation);\r\n\r\n    if (!aux.length) {\r\n        throw new Error('No module annotation found');\r\n    }\r\n\r\n    moduleNotes = merge(create(ModuleAnnotation), ...aux);\r\n\r\n    var constants: any[] = [];\r\n    var values: any[] = [];\r\n    var services: any[] = [];\r\n    var decorators: any[] = [];\r\n    var filters: any[] = [];\r\n    var animations: any[] = [];\r\n    var components: any[] = [];\r\n    var directives: any[] = [];\r\n    var modules: any[] = [];\r\n\r\n    // TODO optimize this.. to much reflection queries\r\n    for (let dep of moduleNotes.dependencies) {\r\n        // Regular angular module\r\n        if (isString(dep)) {\r\n            modules.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, ModuleAnnotation)) {\r\n            if (Reflect.hasOwnMetadata(PUBLISHED_ANNOTATION_KEY, dep)) {\r\n                modules.push(Reflect.getOwnMetadata(PUBLISHED_ANNOTATION_KEY, dep));\r\n            }\r\n            else {\r\n                modules.push(registerModule(<ModuleConstructor> dep).name);\r\n            }\r\n        }\r\n        else if (hasAnnotation(dep, ConstantAnnotation, 'constant')) {\r\n            constants.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, ValueAnnotation, 'value')) {\r\n            values.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, ServiceAnnotation)) {\r\n            services.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, DecoratorAnnotation)) {\r\n            decorators.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, FilterAnnotation)) {\r\n            filters.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, AnimationAnnotation)) {\r\n            animations.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, ComponentAnnotation)) {\r\n            components.push(dep);\r\n        }\r\n        else if (hasAnnotation(dep, DirectiveAnnotation)) {\r\n            directives.push(dep);\r\n        }\r\n        else {\r\n            // TODO WTF?\r\n            throw new Error(`I don't recognize what kind of dependency is this: ${dep}`);\r\n        }\r\n    }\r\n\r\n    name = name || moduleNotes.name || getNewModuleName();\r\n    \r\n    // Register the module on Angular\r\n    var ngModule = angular.module(name, modules);    \r\n        \r\n    // Instantiate the module\r\n    var module = new moduleClass(ngModule);\r\n    \r\n    // Register config functions\r\n    var configFns: Function[] = [];\r\n    if (isFunction(module.onConfig)) configFns.push(module.onConfig.bind(module));\r\n    if (moduleNotes.config) {\r\n        if (isFunction(moduleNotes.config)) configFns.push(<Function> moduleNotes.config);\r\n        else configFns = configFns.concat(<Function[]> moduleNotes.config)\r\n    }\r\n    for (let fn of configFns) ngModule.config(fn);\r\n    \r\n    // Register initialization functions\r\n    var runFns: Function[] = [];\r\n    if (isFunction(module.onRun)) runFns.push(module.onRun.bind(module));\r\n    if (moduleNotes.run) {\r\n        if (isFunction(moduleNotes.run)) runFns.push(<Function> moduleNotes.run);\r\n        else runFns = runFns.concat(<Function[]> moduleNotes.run)\r\n    }\r\n    for (let fn of runFns) ngModule.run(fn);\r\n    \r\n    registerStates(moduleClass, ngModule);\r\n    registerRoutes(moduleClass, ngModule);\r\n\r\n    for (let item of values) registerValue(item, ngModule);\r\n    for (let item of constants) registerConstant(item, ngModule);\r\n    for (let item of filters) registerFilter(item, ngModule);\r\n    for (let item of animations) registerAnimation(item, ngModule);\r\n    for (let item of services) registerService(item, ngModule);\r\n    for (let item of decorators) registerDecorator(item, ngModule);\r\n    for (let item of components) registerComponent(item, ngModule);\r\n    for (let item of directives) registerDirective(item, ngModule);\r\n\r\n    Reflect.defineMetadata(PUBLISHED_ANNOTATION_KEY, name, moduleClass);\r\n    \r\n    return ngModule;\r\n\r\n}\r\n\r\n/**\r\n * Unwraps a TNG module, registering it and its dependencies on Angular.\r\n */\r\nexport {registerModule as unwrapModule};","/// <reference path=\"./_references\" />\r\n\r\nexport const ANNOTATIONS_METADATA_KEY = 'tng';\r\n\r\nvar _Reflect = Reflect;\r\nexport {_Reflect as Reflect};\r\n\r\nfunction getKey(key?: string): string {\r\n\treturn !key ? ANNOTATIONS_METADATA_KEY : `${ANNOTATIONS_METADATA_KEY}:${key}`;\r\n}\r\n\r\nexport function getAnnotations(target: any, type?: Function, key?: string): any[] {\r\n\r\n\tvar annotations = <any[]> Reflect.getOwnMetadata(getKey(key), target) || [];\r\n\r\n\tif (type) {\r\n\t\treturn annotations.filter((value) => value instanceof type);\r\n\t}\r\n\r\n\treturn annotations;\r\n\r\n}\r\n\r\nexport function setAnnotations(target: any, annotations: any[], key?: string) {\r\n\r\n\tReflect.defineMetadata(getKey(key), annotations, target);\r\n\r\n}\r\n\r\nexport function addAnnotation(target: any, annotation: any, key?: string) {\r\n\r\n\tvar annotations = getAnnotations(target, null, key);\r\n\tannotations.push(annotation);\r\n\tsetAnnotations(target, annotations, key);\r\n\r\n}\r\n\r\nexport function hasAnnotation(target: any, type?: Function, key?: string): boolean {\r\n\r\n\tif (!type) {\r\n\t\treturn Reflect.hasOwnMetadata(getKey(key), target);\r\n\t}\r\n\r\n\treturn getAnnotations(target, type, key).length > 0;\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\nimport {getAnnotations} from './reflection';\r\nimport {makeDecorator, setIfInterface, merge, create, isFunction} from './utils';\r\n\r\n/**\r\n * Options available when decorating a class as a service\r\n */\r\nexport interface ServiceOptions {\r\n    /**\r\n     * The name the service will be made available for injection\r\n     */\r\n    name: string;\r\n    \r\n    /**\r\n     * An optional provider object or provider factory\r\n     */\r\n    provider?: ng.IServiceProvider|ng.IServiceProviderFactory;\r\n    \r\n    /**\r\n     * An optional service factory\r\n     */\r\n    factory?: Function;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ServiceAnnotation {\r\n\r\n    name = '';\r\n    provider: ng.IServiceProvider|ng.IServiceProviderFactory = null;\r\n    factory: Function = null;\r\n\r\n    constructor(options: ServiceOptions) {\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Interface services may implement\r\n */\r\nexport interface Service {\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ServiceConstructor extends Function {\r\n    new (...args: any[]): Service;\r\n    prototype: Service;\r\n}\r\n\r\ntype DecoratorSignature = (options: ServiceOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class as being a service\r\n */\r\nexport var Service = <DecoratorSignature> makeDecorator(ServiceAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function registerService(serviceClass: ServiceConstructor, ngModule: ng.IModule) {\r\n\r\n    var aux = getAnnotations(serviceClass, ServiceAnnotation);\r\n\r\n    if (!aux.length) {\r\n        throw new Error(\"Service annotation not found\");\r\n    }\r\n\r\n    var annotation = merge(create(ServiceAnnotation), ...aux);\r\n    var name = annotation.name;\r\n\r\n    if (annotation.provider) {\r\n        ngModule.provider(name, <any> annotation.provider);\r\n    }\r\n    else if (isFunction(annotation.factory)) {\r\n        ngModule.factory(name, annotation.factory);\r\n    }\r\n    else {\r\n        // TODO Is it invoked later with $injector.invoke()?\r\n        ngModule.service(name, serviceClass);\r\n    }\r\n\r\n}","/// <reference path=\"../_references\" />\r\n\r\nimport {bind} from '../di';\r\nimport {makeDecorator, create, merge, Map, forEach} from '../utils';\r\nimport {getAnnotations} from '../reflection';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class RoutesAnnotation {\r\n    \r\n    routes: Map<string|Function>;\r\n\r\n    constructor(routes: Map<string|Function>) {\r\n        this.routes = routes;\r\n    }\r\n\r\n}\r\n\r\ntype RoutesDecorator = (routes: Map<string|Function>) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class with states\r\n */\r\nexport var Routes = <RoutesDecorator> makeDecorator(RoutesAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function registerRoutes(moduleController: Function, ngModule: ng.IModule) {\r\n    \r\n    var notes = <RoutesAnnotation[]> getAnnotations(moduleController, RoutesAnnotation);\r\n        \r\n    if (!notes.length) return;\r\n    \r\n    var routes = {};\r\n    notes.forEach((note) => merge(routes, note.routes));\r\n    \r\n    ngModule.config(bind(['$urlRouterProvider'], ($urlRouterProvider: ng.ui.IUrlRouterProvider) => {\r\n        \r\n        forEach(routes, (handler, route) => {\r\n            if (route === '?') {\r\n                $urlRouterProvider.otherwise(handler);\r\n            }\r\n            else {\r\n                $urlRouterProvider.when(route, handler);\r\n            }\r\n        });\r\n                \r\n    })); \r\n    \r\n}","/// <reference path=\"../_references\" />\r\n\r\nimport {bind} from '../di';\r\nimport {makeDecorator, create, merge, isString, isFunction, Map, isArray, forEach} from '../utils';\r\nimport {getAnnotations} from '../reflection';\r\nimport {ViewAnnotation} from '../view';\r\n\r\n/**\r\n * Options available when decorating an application controller with states\r\n * TODO document\r\n */\r\nexport interface StateConfig {\r\n    \r\n    path: string;\r\n    abstract?: boolean;\r\n    view?: Function;\r\n    views?: {[outlet:string]: Function};\r\n    parent?: StateConfig|string;\r\n    \r\n    // TODO\r\n    // params\r\n    // resolve\r\n    // data\r\n    // reloadOnSearch\r\n    // onEnter\r\n    // onExit\r\n    \r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface InternalStateConfig extends StateConfig {\r\n    name: string;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class StatesAnnotation {\r\n    \r\n    states: Map<InternalStateConfig>;\r\n\r\n    constructor(states: Map<InternalStateConfig>) {\r\n        \r\n        forEach(states, (state, name) => state.name = name);\r\n        this.states = states;\r\n        \r\n    }\r\n\r\n}\r\n\r\ntype StatesDecorator = (states: Map<StateConfig>) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a class with states\r\n */\r\nexport var States = <StatesDecorator> makeDecorator(StatesAnnotation);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function registerStates(moduleController: Function, ngModule: ng.IModule) {\r\n    \r\n    var notes = <StatesAnnotation[]> getAnnotations(moduleController, StatesAnnotation);\r\n        \r\n    if (!notes.length) return;\r\n    \r\n    var states:InternalStateConfig[] = [];\r\n    \r\n    forEach(notes, (note) =>\r\n        forEach(note.states, (state) =>\r\n            states.push(state)));\r\n    \r\n    ngModule.config(bind(['$stateProvider'], ($stateProvider: ng.ui.IStateProvider) => {\r\n        \r\n        for (let state of states) {\r\n            $stateProvider.state(translateToUiState(state));\r\n        }\r\n                \r\n    })); \r\n    \r\n}\r\n\r\nfunction translateToUiState(state: InternalStateConfig): ng.ui.IState {\r\n    \r\n    var translatedState:ng.ui.IState = {};\r\n    \r\n    translatedState.name = state.name;\r\n    translatedState.url = state.path;\r\n    translatedState.abstract = !!state.abstract;\r\n    \r\n    // If the state has a parent, we force the string way\r\n    if (state.parent) {\r\n        let parent = state.parent;\r\n        if (!isString(parent)) {\r\n            parent = (<InternalStateConfig> parent).name;\r\n        }\r\n        // ng.ui.IState is missing parent\r\n        (<any> translatedState).parent = parent;\r\n    }\r\n        \r\n    if (state.view && state.views) {\r\n        throw Error('Cannot provide both view and views');\r\n    }\r\n    else if (!state.view && !state.views) {\r\n        throw Error('Must provide either view or views');\r\n    }\r\n    else {\r\n        let views = <{[key:string]:any}> {};\r\n        \r\n        if (state.view) {\r\n            views[''] = extractViewData(state.view);\r\n        }\r\n        else {\r\n            forEach(state.views, (controller, outlet) => views[outlet] = extractViewData(controller))\r\n        }\r\n        \r\n        translatedState.views = views;    \r\n    }\r\n\r\n    return translatedState;\r\n\r\n}\r\n\r\nfunction extractViewData(viewModel: Function) {\r\n    \r\n    let notes = getAnnotations(viewModel, ViewAnnotation);\r\n    \r\n    if (!notes.length) {\r\n        throw new Error('Template not defined');\r\n    }\r\n    \r\n    let template = merge(create(ViewAnnotation), ...notes);\r\n    let data:any = {};\r\n    \r\n    data.controller = viewModel;\r\n    data.controllerAs = template.controllerAs;   \r\n    data.template = template.template;   \r\n    data.templateUrl = template.templateUrl;\r\n    // TODO style?\r\n    \r\n    return data;\r\n    \r\n}","export {Routes} from './ui-router/routes';\r\nexport {States} from './ui-router/states';","/// <reference path=\"./_references\" />\r\n\r\nimport {Reflect, getAnnotations, addAnnotation} from './reflection';\r\n\r\ntype extendSignature = <Type>(dest: Type, ...rest: any[]) => Type;\r\n\r\nexport var isDefined = angular.isDefined;\r\nexport var isString = angular.isString;\r\nexport var isNumber = angular.isNumber;\r\nexport var isObject = angular.isObject;\r\nexport var isElement = angular.isElement;\r\nexport var isDate = angular.isDate;\r\nexport var isArray = angular.isArray;\r\nexport var isFunction = angular.isFunction;\r\nexport var forEach = angular.forEach;\r\nexport var extend = <extendSignature> angular.extend;\r\nexport var copy = <extendSignature> angular.copy;\r\nexport var merge = <extendSignature> (<any> angular).merge;\r\n\r\nexport type FunctionReturningNothing = (...args: any[]) => void;\r\nexport type FunctionReturningSomething = (...args: any[]) => any;\r\nexport type FunctionReturningString = (...args: any[]) => string;\r\nexport type FunctionReturningNumber = (...args: any[]) => number;\r\n\r\nexport interface Map<TValue> {\r\n    [key: string]: TValue;\r\n}\r\n\r\nexport function create<Type>(constructor: { prototype: Type }): Type {\r\n\r\n    return Object.create(constructor.prototype);\r\n\r\n}\r\n\r\nexport function setIf(target:any, source:any) {\r\n    \r\n    if (target == null || source == null) {\r\n        return;\r\n    }\r\n\t\r\n\tfor (let key in source) if (source.hasOwnProperty(key)) {\r\n        target[key] = source[key];\r\n    }\r\n\t\r\n}\r\n\r\nexport function setIfInterface(target:any, source:any) {\r\n    \r\n    if (target == null || source == null) {\r\n        return;\r\n    }\r\n\t\r\n\tfor (let key in source) if (source.hasOwnProperty(key)) {\r\n        if (target.hasOwnProperty(key)) {\r\n            target[key] = source[key];\r\n        }\r\n    }\r\n\t\r\n}\r\n\r\nexport function makeDecorator<T extends Function>(annotationClass: T) {\r\n\r\n    return function() {\r\n\r\n        var annotationInstance = Object.create(annotationClass.prototype);\r\n        annotationClass.apply(annotationInstance, arguments);\r\n\r\n        return function(target: T) {\r\n            addAnnotation(target, annotationInstance);\r\n            return target;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function makeParamDecorator<T extends Function>(annotationClass: T) {\r\n\r\n    return function() {\r\n\r\n        var annotationInstance = Object.create(annotationClass.prototype);\r\n        annotationClass.apply(annotationInstance, arguments);\r\n\r\n        return function(target: T, unusedKey: string, index: number) {\r\n\r\n            var parameters = Reflect.getMetadata('parameters', target);\r\n            parameters = parameters || [];\r\n    \r\n            // there might be gaps if some in between parameters do not have annotations.\r\n            // we pad with nulls.\r\n            while (parameters.length <= index) {\r\n                parameters.push(null);\r\n            }\r\n\r\n            parameters[index] = annotationInstance;\r\n            Reflect.defineMetadata('parameters', parameters, target);\r\n            return target;\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const enum SelectorType {\r\n    Attribute,\r\n    Class,\r\n    //Comment,\r\n    Tag\r\n};\r\n\r\ntype Selector = {\r\n    semanticeName: string,\r\n    imperativeName: string,\r\n    type: SelectorType\r\n};\r\n\r\nconst RE_SELECTOR_ATTRIBUTE = /^\\[([a-z\\-_]+)\\]$/i;\r\nconst RE_SELECTOR_CLASS = /^\\.([a-z\\-_]+)$/i;\r\n//const RE_SELECTOR_COMMENT = /^\\/\\/([a-z\\-_]+)$/i;\r\nconst RE_SELECTOR_TAG = /^([a-z\\-_]+)$/i;\r\n\r\nexport function parseSelector(selector: string): Selector {\r\n    \r\n    var semanticeName: string;\r\n    var type: SelectorType;\r\n    var m: RegExpMatchArray;\r\n    \r\n    if (m = RE_SELECTOR_TAG.exec(selector)) {\r\n        type = SelectorType.Tag;\r\n    }\r\n    else if (m = RE_SELECTOR_ATTRIBUTE.exec(selector)) {\r\n        type = SelectorType.Attribute;\r\n    }\r\n    else if (m = RE_SELECTOR_CLASS.exec(selector)) {\r\n        type = SelectorType.Class;\r\n    }\r\n    //else if (m = RE_SELECTOR_COMMENT.exec(selector)) {\r\n    //    type = SelectorType.Comment;\r\n    //}\r\n    else {\r\n        throw new Error(`Invalid selector: ${selector}`);\r\n    }\r\n\r\n    return {\r\n        semanticeName: m[1],\r\n        imperativeName: 'TODO',\r\n        type: type\r\n    };\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function bindAll<T>(host: T): T {\r\n    \r\n    var aux = <any> host;\r\n    \r\n    if (aux) {\r\n        for (let key in aux) {\r\n            if (isFunction(aux[key])) {\r\n                aux[key] = aux[key].bind(aux);\r\n            }\r\n        }\r\n    }\r\n    \r\n    return host;\r\n    \r\n}","/// <reference path=\"./_references\" />\r\n\r\nimport {setIfInterface} from './utils';\r\nimport {getAnnotations, setAnnotations} from './reflection';\r\n\r\n/**\r\n * A framework envelope for the value\r\n */\r\nexport interface ValueWrapper {\t\r\n\r\n}\r\n\r\n/**\r\n * Wraps a value to be made available for dependency injection\r\n * \r\n * @param name The name of the value through which it will made available\r\n * @param value The value to be injected, as is\r\n * \r\n * @return A wrapper instance, to be used as a module dependency\r\n */\r\nexport function Value(name: string, value: any): ValueWrapper {\r\n\r\n    var wrapper: ValueWrapper = {};\r\n\r\n    setAnnotations(wrapper, [new ValueAnnotation<any>({\r\n        name: name,\r\n        value: value\r\n    })], 'value');\r\n\r\n    return wrapper;\r\n\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ValueOptions {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ValueAnnotation<Type> {\r\n\r\n    name = '';\r\n    value: Type = null;\r\n\r\n    constructor(options: ValueOptions) {\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @intenal\r\n */\r\nexport function registerValue(value: ValueWrapper, ngModule: ng.IModule) {\r\n\r\n    var aux = getAnnotations(value, ValueAnnotation, 'value');\r\n\r\n    if (!aux.length) {\r\n        throw new Error(\"Value annotation not found\");\r\n    }\r\n\r\n    var annotation = <ValueAnnotation<any>> aux[0];\r\n    ngModule.value(annotation.name, annotation.value);\r\n\r\n}","/// <reference path=\"./_references\" />\r\n\r\nimport {makeDecorator, FunctionReturningString, setIfInterface} from './utils';\r\n\r\n/**\r\n * Options available when decorating a class with view information\r\n * TODO document\r\n */\r\nexport interface ViewOptions {\r\n    \r\n    /**\r\n     * \r\n     */\r\n    controllerAs: string;\r\n    \r\n    /**\r\n     * \r\n     */\r\n    template?: string|FunctionReturningString;\r\n    \r\n    /**\r\n     * \r\n     */\r\n    templateUrl?: string|FunctionReturningString;\r\n    \r\n    /**\r\n     * \r\n     */\r\n    styleUrl?: string;\r\n        \r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ViewAnnotation {\r\n\r\n    template: string|FunctionReturningString = '';\r\n    templateUrl: string|FunctionReturningString = '';\r\n    styleUrl = '';\r\n    controllerAs = '';\r\n\r\n    constructor(options: ViewOptions) {\r\n        setIfInterface(this, options);\r\n    }\r\n\r\n}\r\n\r\ntype ViewDecorator = (options: ViewOptions) => ClassDecorator;\r\n\r\n/**\r\n * A decorator to annotate a controller with view information\r\n */\r\nexport var View = <ViewDecorator> makeDecorator(ViewAnnotation);","import './globals'; //for side-effects\r\n\r\nexport {Inject, bind} from './di'\r\nexport {Value} from './value';\r\nexport {Constant} from './constant';\r\nexport {Filter} from './filter';\r\nexport {Animation} from './animation';\r\nexport {Service} from './service';\r\nexport {Decorator} from './decorator';\r\nexport {View} from './view';\r\nexport {ComponentView, ComponentTemplateNamespace} from './component-view';\r\nexport {Directive, Transclusion} from './directive';\r\nexport {Component} from './component';\r\nexport {Module, unwrapModule} from './module';\r\nexport {Application} from './application';\r\nexport {bootstrap} from './bootstrap';\r\n\r\n// TODO extract\r\nexport {States, StateConfig} from './ui-router/states';\r\nexport {Routes} from './ui-router/routes';"]}